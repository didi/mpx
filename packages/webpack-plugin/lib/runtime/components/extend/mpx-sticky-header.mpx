<template>
  <view class="mpx-sticky-header">
    <view
      class="sticky-header-placeholder"
      id="sticky-header-placeholder-{{stickyId}}"
      style="height: {{contentHeight}}px; position: {{ isSticky ? 'relative' : 'absolute' }}"
    ></view>

    <root-portal wx:if="{{isRn && isSticky}}">
      <view
        id="{{stickyId}}"
        wx:ref
        class="sticky-header-content {{isSticky ? 'is-sticky' : ''}}"
        style="{{contentStyle}}"
      >
        <slot></slot>
      </view>
    </root-portal>
    <view
      wx:else
        id="{{stickyId}}"
        wx:ref
        class="sticky-header-content {{isSticky ? 'is-sticky' : ''}}"
        style="{{contentStyle}}"
      >
        <slot></slot>
      </view>
  </view>
</template>

<script>
  import mpx, { createComponent } from '@mpxjs/core'

  createComponent({
    properties: {
      // 吸顶时与顶部的距离，单位px
      offsetTop: {
        type: Number,
        value: 0
      },
      // 内边距 [top, right, bottom, left]
      padding: {
        type: Array,
        value: [0, 0, 0, 0]
      },
      // scroll-view的选择器
      scrollSelector: {
        type: String,
        value: ''
      },
      stickyId: {
        type: String,
        value: ''
      }
    },

    data: {
      isSticky: false,
      contentHeight: 0,
      contentStyle: '',
      parentRect: {},
      isRn: __mpx_mode__ === 'ios' || __mpx_mode__ === 'android'
    },

    computed: {
      baseStyle() {
        const { padding, offsetTop, isSticky } = this
        const [paddingTop, paddingRight, paddingBottom, paddingLeft] = padding
        return [
          isSticky ? `top: ${(this.parentRect.top || 0) + offsetTop}px;` : '',
          `padding: ${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px;`
        ].join('')
      }
    },
    ready() {
      this.init()
    },
    lifetimes: {
      detached() {
        this.cleanup()
      }
    },

    methods: {
      init() {
        mpx
          .createSelectorQuery()
          .select(`#${this.scrollSelector}`)
          .boundingClientRect((rect) => {
            this.parentRect = rect
          })
          .exec()
        mpx
          .createSelectorQuery()
          .in(this)
          .select('.sticky-header-content')
          .boundingClientRect((rect) => {
            if (rect) {
              this.contentHeight = rect.height
              this.setupObservers()
            }
          })
          .exec()
      },

      setupObservers() {
        if (this.intersectionObserver) {
          this.intersectionObserver.disconnect()
        }

        let lastPushedOffset

        const updateStickyState = (entry) => {
          const topDistance = entry.boundingClientRect.top - this.parentRect.top - this.offsetTop
          const shouldSticky = entry.intersectionRatio < 1 && topDistance <= 0

          if (this.isSticky !== shouldSticky) {
            this.isSticky = shouldSticky
            this.contentStyle = shouldSticky ? this.baseStyle : ''

            this.triggerEvent('stickontopchange', {
              isSticky: shouldSticky,
              height: entry.boundingClientRect.height
            })
          }
        }

        if (this.scrollSelector) {
          this.intersectionObserver = this.createIntersectionObserver({
            thresholds: [0, 1]
          })
            .relativeToViewport({
              top: -this.parentRect.top,
              left: -this.parentRect.left,
              right: this.parentRect.right,
              bottom: this.parentRect.bottom
            })
            .observe(`#sticky-header-placeholder-${this.stickyId}`, (res) => {
              updateStickyState(res)
            })
        }
      },

      cleanup() {
        if (this.intersectionObserver) {
          this.intersectionObserver.disconnect()
        }
      }
    }
  })
</script>

<style lang="stylus">
  .mpx-sticky-header
    position relative
  .sticky-header-placeholder
    width 100%
    position absolute
    top 0
    left 0
    /* 支付宝环境需要设置允许事件穿透, 否则点不动 */
    /* @mpx-if (__mpx_mode__ === 'ali') */
    pointer-events none
    /* @mpx-endif */
  .sticky-header-content
    width 100%
    box-sizing border-box
  .is-sticky
    position fixed
    left 0
</style>

<script type="application/json">
  {
    "component": true
  }
</script>